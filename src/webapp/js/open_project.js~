const urlParams = new URLSearchParams(window.location.search);

var standards = {};
var current_standard = {};

// TODO:  put in global js functions
function fill_table(table_id, template_id, data, properties, actions)
{
		const table = document.getElementById(table_id);
		const tbody = table.querySelector("tbody");
		const template = document.getElementById(template_id);

		for (let i = 0; i < data.length; i++) {
				/*const row = template.content.cloneNode(true);
				let td = row.querySelectorAll("td");

				const buttons = td[td.length  - 1].querySelectorAll("button")
				
				for (let j = 0; j < buttons.length; j++) {
						buttons[j].onclick = function() { actions[j].call(buttons[j], data[i]); }
				}
								
				for (let j = 0; j < properties.length; j++) {
						td[j].textContent = data[i][properties[j]];
				}*/

				tbody.appendChild(create_row(template_id, data[i], properties, actions));
		}
}

function create_row(template_id, data_row, properties, actions)
{
		const template = document.getElementById(template_id);
		const row = template.content.cloneNode(true);
		let td = row.querySelectorAll("td");

		const buttons = td[td.length  - 1].querySelectorAll("button")
		
		for (let j = 0; j < buttons.length; j++) {
				buttons[j].onclick = function() { actions[j].call(buttons[j], data_row); }
		}
								
		for (let j = 0; j < properties.length; j++) {
				td[j].textContent = data_row[properties[j]];
		}

		return row;
}


async function load_standards()
{
		const response = await fetch("api/v2/projects/" + urlParams.get("id")  + "/standards");
		standards = await response.json();

		const actions = [ open_standard, edit_standard, delete_standard ];
		
		fill_table("table_standards", "table_standards_row", standards, ["id", "name", "desc"], actions);
}

function create_standard()
{
		const modal = document.getElementById("standards_modal");
		
		document.getElementById("standards_submit_button").textContent = "Create";
		document.getElementById("standards_submit_button").addEventListener("click", create_standard_send);

		modal.style.display = "block";
}

async function create_standard_send()
{
		var create_standard = {
				idProject: urlParams.get("id"),
				name: document.getElementById("edit_standard_name").value,
				desc: document.getElementById("edit_standard_description").value
		};

		var response = await fetch(`api/v2/projects/${urlParams.get("id")}/standards`,
															 { method: "POST", headers: { 'Content-Type': 'application/json' },
																 body: JSON.stringify(create_standard) });

		if (response.ok) {
				iziToast.success({ title: 'Success', message: 'Standard successfully created' });

				const row = create_row("table_standards_row", create_standard, ["id", "name", "desc"],
															 [ open_standard, edit_standard, delete_standard ]);

				const table = document.getElementById(table_id);
				const tbody = table.querySelector("tbody");

				close_modal("standards_modal");
		} else {
				iziToast.error({title: 'Error', message: 'Standard could not be created'});
		}
}

function open_standard(standard)
{
		window.open("open_standard.php?idProject=" + urlParams.get("id") + "&idStandard=" + standard.id, "_self");
}

async function delete_standard(standard)
{
		var confirmation = confirm("Are you sure you want to delete this standard?");

		if (confirmation) {
				var response = await fetch(`api/v2/projects/${urlParams.get("id")}/standards/${standard.id}`, { method: "DELETE" });

				if (response.ok) {
						iziToast.success({ title: 'Success', message: 'Standard successfully deleted' });
						document.getElementById("table_standards").deleteRow(standards.indexOf(standard) + 1);
						standards.remove(standard);

						close_modal("standards_modal");
				} else {
						iziToast.error({ title: "Error", message: "Standard could not be deleted"});
				}
				
		}
}

function edit_standard(standard)
{
		const modal = document.getElementById("standards_modal");

		current_standard = standard;
		
		document.getElementById("edit_standard_name").value = standard.name;
		document.getElementById("edit_standard_description").value = standard.desc;
		document.getElementById("standards_submit_button").textContent = "Update";
		document.getElementById("standards_submit_button").addEventListener("click", update_standard);

		modal.style.display = "block";
}

async function update_standard()
{

		current_standard.name = document.getElementById("edit_standard_name").value;
		current_standard.desc = document.getElementById("edit_standard_description").value;
		
		var response = await fetch("api/v2/projects/" + urlParams.get("id") + "/standards/" + current_standard.id,
															 { method: 'put', headers: { 'Content-Type': 'application/json' },
																 body: JSON.stringify(current_standard) });
		if (response.ok) {
				iziToast.success({ title: "Success", message: "Standard successfully updated" });
				
				const table = document.getElementById("table_standards");
				const row = table.rows[standards.indexOf(current_standard) + 1];
				row.cells[1].textContent = current_standard.name;
				row.cells[2].textContent = current_standard.desc;

				close_modal("standards_modal");
				
		} else {
				iziToast.error({ title: "Error", message: "Standard could not be updated" });
		}
}

// TODO: put in global js functions
function close_modal(id)
{
		document.getElementById(id).style.display = "none";
}

function load_data()
{
		load_standards();
}

window.onload = load_data();
